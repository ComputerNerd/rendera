#!/usr/bin/env bash

CC=gcc
DEBUG=
CFLAGS="-Wall -Wno-unused -fmax-errors=5"
LDFLAGS=""
EXT=""
OBJS=""
LIBS="-lm -lfltk -lfltk_images -ljpeg -lpng"

for file in *.cxx
do
  if [[ ! ${file} =~ "template" ]]
  then
    file=${file##*/}
    OBJS="${OBJS} ${file%.cxx}.o"
  fi
done

compile_platform=`uname|sed -e s/_.*//|tr '[:upper:]' '[:lower:]'|sed -e 's/\//_/g'`
compile_arch=`uname -m | sed -e s/i.86/i386/`

case $compile_platform in
mingw*)
CFLAGS="${CFLAGS} -DWINDOWS -mwindows"
EXT=".exe"
  case $compile_arch in
  i386*)
  CFLAGS="${CFLAGS} -m32"
  ;;
  esac
  case $compile_arch in
  x86_64*)
  CFLAGS="${CFLAGS} -m64"
  ;;
  esac
;;
esac

case $compile_platform in
linux*)
CFLAGS="${CFLAGS} -DLINUX"
LIBS="${LIBS} -lX11"
  case $compile_arch in
  i386*)
  CFLAGS="${CFLAGS} -m32"
  ;;
  esac
  case $compile_arch in
  x86_64*)
  CFLAGS="${CFLAGS} -m64"
  ;;
  esac
;;
esac

show_help()
{
  echo
  echo "Usage: ./configure [options]"
  echo
  echo "  --help                    list options"
  echo "  --enable-debug            compile in debug code"
  echo

  exit
}

instr()
{
  for s in $2; do
    case "${s}" in
    *${1}*) return 0
    ;;
    esac
  done

  return 1
}

for option in $@; do

  optval="${option#*=}"

  case "$option" in
  --help) show_help
  ;;
  --enable-debug) DEBUG="-DDEBUG -g"
  ;;
  esac
done

if [ "${DEBUG}" = "" ]
then
  CFLAGS="${CFLAGS} -O3"
else
  CFLAGS="${CFLAGS} ${DEBUG}"
fi

echo "# Generated include file" > config.mak
echo "# $0 $*" >> config.mak
echo >> config.mak
echo "CFLAGS=${CFLAGS}" >> config.mak
echo "LIBS=${LIBS}" >> config.mak
echo "EXT=${EXT}" >> config.mak
echo "OBJS=${OBJS}" >> config.mak
echo >> config.mak

echo
echo "Configuration:"
echo "      OS: $compile_platform"
echo "    ARCH: $compile_arch"
echo "---------------------------"
echo "  CFLAGS: ${CFLAGS}"
echo "    LIBS: ${LIBS}"
echo "    OBJS: ${OBJS}"
echo "     BIN: rendera${EXT}"
echo
echo "Now type: make"
echo

